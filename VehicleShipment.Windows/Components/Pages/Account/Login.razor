@page "/login"
@using VehicleShipment.Windows.Models
@inject NavigationManager Navigation
@inject CustomAuthenticationStateProvider AuthStateProvider

<h1>Login</h1>

<div class="alert alert-info">
    Please enter your login credentials.
</div>

<EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="alert alert-danger" hidden="@loginModel.LoginFailureHidden">
        Invalid login attempt, please try again.
    </div>

    <div class="form-group">
        <label>Username</label>
        <InputText id="username" @bind-Value="loginModel.Username" class="form-control" />
    </div>

    <div class="form-group">
        <label>Password</label>
        <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" />
    </div>

    <div class="form-group mt-1">
        <button type="submit" class="btn btn-primary w-100">Login Now</button>
    </div>
</EditForm>

@code {
    private LoginViewModel loginModel = new();

    private async Task HandleValidSubmit()
    {
        // Call the login method from CustomAuthenticationStateProvider
        var token = await AuthStateProvider.Login(loginModel.Username, loginModel.Password);

        if (token != null)
        {
            // If login is successful, redirect to the homepage or a protected page
            Navigation.NavigateTo("/");
        }
        else
        {
            // Show error message if login fails
            loginModel.LoginFailureHidden = false;
        }
    }
}
